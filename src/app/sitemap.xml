export const runtime = "nodejs";
export const revalidate = 3600; // odśwież sitemapę co godzinę

import type { MetadataRoute } from "next";
import { prisma } from "@/lib/prisma";

const SITE_URL =
  process.env.NEXT_PUBLIC_SITE_URL || "https://m2.nieruchomosci.pl";

export default async function sitemap(): Promise<MetadataRoute.Sitemap> {
  // Stałe podstrony
  const staticUrls: MetadataRoute.Sitemap = [
    { url: `${SITE_URL}/`, lastModified: new Date() },
    { url: `${SITE_URL}/domy`, lastModified: new Date() },
    { url: `${SITE_URL}/mieszkania`, lastModified: new Date() },
    { url: `${SITE_URL}/dzialki`, lastModified: new Date() },
    { url: `${SITE_URL}/inne`, lastModified: new Date() },
    { url: `${SITE_URL}/kontakt`, lastModified: new Date() },
    { url: `${SITE_URL}/polityka-prywatnosci`, lastModified: new Date() },
  ];

  try {
    const listings = await prisma.listing.findMany({
      select: { slug: true, updatedAt: true },
      orderBy: { updatedAt: "desc" },
      take: 2000, // limit bezpieczeństwa
    });

    const offerUrls: MetadataRoute.Sitemap = listings.map((l) => ({
      url: `${SITE_URL}/oferta/${l.slug}`,
      lastModified: l.updatedAt ?? new Date(),
      changeFrequency: "weekly",
      priority: 0.8,
    }));

    return [...staticUrls, ...offerUrls];
  } catch {
    // fallback gdyby DB była chwilowo niedostępna
    return staticUrls;
  }
}
